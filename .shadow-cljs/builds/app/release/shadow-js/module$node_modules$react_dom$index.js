["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],"~:js","shadow$provide[11]=function(da,X,pa,x){function t(){if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&\"function\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)}catch(P){console.error(P)}}t();pa.exports=X(9)}","~:source","shadow$provide[11] = function(global,require,module,exports) {\n'use strict';\r\n\r\nfunction checkDCE() {\r\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\r\n  if (\r\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\r\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\r\n  ) {\r\n    return;\r\n  }\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    // This branch is unreachable because this function is only called\r\n    // in production, but the condition is true only in development.\r\n    // Therefore if the branch is still here, dead code elimination wasn't\r\n    // properly applied.\r\n    // Don't change the message. React DevTools relies on it. Also make sure\r\n    // this message doesn't occur elsewhere in this function, or it will cause\r\n    // a false positive.\r\n    throw new Error('^_^');\r\n  }\r\n  try {\r\n    // Verify that the code above has been dead code eliminated (DCE'd).\r\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\r\n  } catch (err) {\r\n    // DevTools shouldn't crash React, no matter what.\r\n    // We should still report in case we break this code.\r\n    console.error(err);\r\n  }\r\n}\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  // DCE check should happen before ReactDOM bundle executes so that\r\n  // DevTools can report bad minification during injection.\r\n  checkDCE();\r\n  module.exports = require('./cjs/react-dom.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/react-dom.development.js');\r\n}\r\n\n};","~:removed-requires",["~#set",["~$module$node_modules$react_dom$cjs$react_dom_development"]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min"]],"~:properties",["^5",[]],"~:compiled-at",1703447043872,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_dom$index.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,EAAf,CAAA,CAAqB,QAAQ,CAACC,EAAD,CAAQC,CAAR,CAAgBC,EAAhB,CAAuBC,CAAvB,CAAgC,CAG7DC,QAASA,EAAQ,EAAG,CAElB,GAC4C,WAD5C,GACE,MAAOC,+BADT,EAEqD,UAFrD,GAEE,MAAOA,+BAA+BD,CAAAA,QAFxC,CAgBA,GAAI,CAEFC,8BAA+BD,CAAAA,QAA/B,CAAwCA,CAAxC,CAFE,CAGF,MAAOE,CAAP,CAAY,CAGZC,OAAQC,CAAAA,KAAR,CAAcF,CAAd,CAHY,CArBI,CA+BlBF,CAAA,EACAF,GAAOC,CAAAA,OAAP,CAAiBF,CAAA,CAAQ,CAAR,CAnC0C;\",\n\"sources\":[\"node_modules/react-dom/index.js\"],\n\"sourcesContent\":[\"shadow$provide[11] = function(global,require,module,exports) {\\n'use strict';\\r\\n\\r\\nfunction checkDCE() {\\r\\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\\r\\n  if (\\r\\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\\r\\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\\r\\n  ) {\\r\\n    return;\\r\\n  }\\r\\n  if (process.env.NODE_ENV !== 'production') {\\r\\n    // This branch is unreachable because this function is only called\\r\\n    // in production, but the condition is true only in development.\\r\\n    // Therefore if the branch is still here, dead code elimination wasn't\\r\\n    // properly applied.\\r\\n    // Don't change the message. React DevTools relies on it. Also make sure\\r\\n    // this message doesn't occur elsewhere in this function, or it will cause\\r\\n    // a false positive.\\r\\n    throw new Error('^_^');\\r\\n  }\\r\\n  try {\\r\\n    // Verify that the code above has been dead code eliminated (DCE'd).\\r\\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\\r\\n  } catch (err) {\\r\\n    // DevTools shouldn't crash React, no matter what.\\r\\n    // We should still report in case we break this code.\\r\\n    console.error(err);\\r\\n  }\\r\\n}\\r\\n\\r\\nif (process.env.NODE_ENV === 'production') {\\r\\n  // DCE check should happen before ReactDOM bundle executes so that\\r\\n  // DevTools can report bad minification during injection.\\r\\n  checkDCE();\\r\\n  module.exports = require('./cjs/react-dom.production.min.js');\\r\\n} else {\\r\\n  module.exports = require('./cjs/react-dom.development.js');\\r\\n}\\r\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"checkDCE\",\"__REACT_DEVTOOLS_GLOBAL_HOOK__\",\"err\",\"console\",\"error\"]\n}\n"]